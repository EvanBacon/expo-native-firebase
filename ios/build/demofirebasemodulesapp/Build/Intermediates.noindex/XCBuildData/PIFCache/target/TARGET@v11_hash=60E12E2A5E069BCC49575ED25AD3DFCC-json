{"buildConfigurations":[{"baseConfigurationFileReference":"f4d28763d755257cd889a7bbde742dfcc1dcf02f09013ae5013f104926cf698e","buildSettings":{"ASSETCATALOG_COMPILER_APPICON_NAME":"AppIcon","CURRENT_PROJECT_VERSION":"1","DEAD_CODE_STRIPPING":"NO","INFOPLIST_FILE":"demofirebasemodulesapp/Info.plist","LD_RUNPATH_SEARCH_PATHS":"$(inherited) @executable_path/Frameworks","OTHER_LDFLAGS":"$(inherited) -ObjC -lc++","PRODUCT_BUNDLE_IDENTIFIER":"com.evanbacon.demofirebasemodulesapp","PRODUCT_NAME":"demofirebasemodulesapp","VERSIONING_SYSTEM":"apple-generic"},"guid":"f4d28763d755257cd889a7bbde742dfc4f4285df77029c7e9488e337d2300446","name":"Debug"},{"baseConfigurationFileReference":"f4d28763d755257cd889a7bbde742dfc788388cf23ccc06938886f0ce65e201b","buildSettings":{"ASSETCATALOG_COMPILER_APPICON_NAME":"AppIcon","CURRENT_PROJECT_VERSION":"1","INFOPLIST_FILE":"demofirebasemodulesapp/Info.plist","LD_RUNPATH_SEARCH_PATHS":"$(inherited) @executable_path/Frameworks","OTHER_LDFLAGS":"$(inherited) -ObjC -lc++","PRODUCT_BUNDLE_IDENTIFIER":"com.evanbacon.demofirebasemodulesapp","PRODUCT_NAME":"demofirebasemodulesapp","VERSIONING_SYSTEM":"apple-generic"},"guid":"f4d28763d755257cd889a7bbde742dfc6515d5e59d9b359982bb12691657424e","name":"Release"}],"buildPhases":[{"buildFiles":[],"emitEnvironment":"false","guid":"f4d28763d755257cd889a7bbde742dfc68085b62a1cc4efbe7eca39a0bc8bf81","inputFileListPaths":[],"inputFilePaths":["${PODS_PODFILE_DIR_PATH}/Podfile.lock","${PODS_ROOT}/Manifest.lock"],"name":"[CP] Check Pods Manifest.lock","originalObjectID":"F8BC737F2AD7A05944D9E2A1","outputFileListPaths":[],"outputFilePaths":["$(DERIVED_FILE_DIR)/Pods-demofirebasemodulesapp-checkManifestLockResult.txt"],"scriptContents":"diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n","shellPath":"/bin/sh","type":"com.apple.buildphase.shell-script"},{"buildFiles":[],"emitEnvironment":"false","guid":"f4d28763d755257cd889a7bbde742dfce91b19d6949fc2c02a6d03a6e2c59394","inputFileListPaths":[],"inputFilePaths":[],"name":"Start Packager","originalObjectID":"FD4C38642228810C00325AF5","outputFileListPaths":[],"outputFilePaths":[],"scriptContents":"export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n","shellPath":"/bin/sh","type":"com.apple.buildphase.shell-script"},{"buildFiles":[{"fileReference":"f4d28763d755257cd889a7bbde742dfc7d9727a0faeea5d48c093ce9689bfdfa","guid":"f4d28763d755257cd889a7bbde742dfc231f2d0c2befbc4314e854935e41e871","intentsCodegenFiles":"true","intentsCodegenVisibility":"public"},{"fileReference":"f4d28763d755257cd889a7bbde742dfc594d24657a64adbd3fc833ee65dea929","guid":"f4d28763d755257cd889a7bbde742dfc1fd9f1af2b3f1f4e149b5f4a3ebedb80","intentsCodegenFiles":"true","intentsCodegenVisibility":"public"}],"guid":"f4d28763d755257cd889a7bbde742dfc29790f8262a1d5c348529b77c65ea1b8","type":"com.apple.buildphase.sources"},{"buildFiles":[{"fileReference":"f4d28763d755257cd889a7bbde742dfc790356ba8da799b96e7a2266cf02bc74","guid":"f4d28763d755257cd889a7bbde742dfc49ff86d3bdadca362c5794184d81515a","intentsCodegenFiles":"true","intentsCodegenVisibility":"public"}],"guid":"f4d28763d755257cd889a7bbde742dfc67db448fb6beb4f77960c855c856e0dc","type":"com.apple.buildphase.frameworks"},{"buildFiles":[{"fileReference":"f4d28763d755257cd889a7bbde742dfc4aaee7cf1e0bbe6a7e230506df0e55b6","guid":"f4d28763d755257cd889a7bbde742dfc6f62f52dc3c3f23c6692944d09442d59","intentsCodegenFiles":"true","intentsCodegenVisibility":"public"},{"fileReference":"f4d28763d755257cd889a7bbde742dfc8d41b2cf1ce5db9243fc1208c0b5b2bd","guid":"f4d28763d755257cd889a7bbde742dfc36201aa843bc98a13b832389d94afc04","intentsCodegenFiles":"true","intentsCodegenVisibility":"public"},{"fileReference":"f4d28763d755257cd889a7bbde742dfcf48f33d0de0ce8034b0d0788db50a240","guid":"f4d28763d755257cd889a7bbde742dfca101cf525019ff20a73b77265bc2b507","intentsCodegenFiles":"true","intentsCodegenVisibility":"public"}],"guid":"f4d28763d755257cd889a7bbde742dfc7257aa460125423b2ea327be6b0308a7","type":"com.apple.buildphase.resources"},{"buildFiles":[],"emitEnvironment":"true","guid":"f4d28763d755257cd889a7bbde742dfc746ed6f7c998a4a49111f31206ee22e5","inputFileListPaths":[],"inputFilePaths":[],"name":"Bundle React Native code and images","originalObjectID":"00DD1BFF1BD5951E006B06BC","outputFileListPaths":[],"outputFilePaths":[],"scriptContents":"export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh","shellPath":"/bin/sh","type":"com.apple.buildphase.shell-script"},{"buildFiles":[],"emitEnvironment":"true","guid":"f4d28763d755257cd889a7bbde742dfc8d830363f8b43cac6237663823a7407f","inputFileListPaths":[],"inputFilePaths":[],"name":"[CP-User] [RNFB] Core Configuration","originalObjectID":"1F0E371917BFA1FF673803FD","outputFileListPaths":[],"outputFilePaths":[],"scriptContents":"#!/usr/bin/env bash\n#\n# Copyright (c) 2016-present Invertase Limited & Contributors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this library except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\nset -e\n\n_MAX_LOOKUPS=2;\n_SEARCH_RESULT=''\n_RN_ROOT_EXISTS=''\n_CURRENT_LOOKUPS=1\n_JSON_ROOT=\"'react-native'\"\n_JSON_FILE_NAME='firebase.json'\n_JSON_OUTPUT_BASE64='e30=' # { }\n_CURRENT_SEARCH_DIR=${PROJECT_DIR}\n_PLIST_BUDDY=/usr/libexec/PlistBuddy\n_TARGET_PLIST=\"${BUILT_PRODUCTS_DIR}/${INFOPLIST_PATH}\"\n_DSYM_PLIST=\"${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Info.plist\"\n\n# plist arrays\n_PLIST_ENTRY_KEYS=()\n_PLIST_ENTRY_TYPES=()\n_PLIST_ENTRY_VALUES=()\n\nfunction setPlistValue {\n  echo \"info:      setting plist entry '$1' of type '$2' in file '$4'\"\n  ${_PLIST_BUDDY} -c \"Add :$1 $2 '$3'\" $4 || echo \"info:      '$1' already exists\"\n}\n\nfunction getFirebaseJsonKeyValue () {\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$1'); puts output[$_JSON_ROOT]['$2']\"\n  else\n    echo \"\"\n  fi;\n}\n\nfunction jsonBoolToYesNo () {\n  if [[ $1 == \"false\" ]]; then\n    echo \"NO\"\n  elif [[ $1 == \"true\" ]]; then\n    echo \"YES\"\n  else echo \"NO\"\n  fi\n}\n\necho \"info: -> RNFB build script started\"\necho \"info: 1) Locating ${_JSON_FILE_NAME} file:\"\n\nif [[ -z ${_CURRENT_SEARCH_DIR} ]]; then\n  _CURRENT_SEARCH_DIR=$(pwd)\nfi;\n\nwhile true; do\n  _CURRENT_SEARCH_DIR=$(dirname \"$_CURRENT_SEARCH_DIR\")\n  if [[ \"$_CURRENT_SEARCH_DIR\" == \"/\" ]] || [[ ${_CURRENT_LOOKUPS} -gt ${_MAX_LOOKUPS} ]]; then break; fi;\n  echo \"info:      ($_CURRENT_LOOKUPS of $_MAX_LOOKUPS) Searching in '$_CURRENT_SEARCH_DIR' for a ${_JSON_FILE_NAME} file.\"\n  _SEARCH_RESULT=$(find \"$_CURRENT_SEARCH_DIR\" -maxdepth 2 -name ${_JSON_FILE_NAME} -print | head -n 1)\n  if [[ ${_SEARCH_RESULT} ]]; then\n    echo \"info:      ${_JSON_FILE_NAME} found at $_SEARCH_RESULT\"\n    break;\n  fi;\n  _CURRENT_LOOKUPS=$((_CURRENT_LOOKUPS+1))\ndone\n\nif [[ ${_SEARCH_RESULT} ]]; then\n  _JSON_OUTPUT_RAW=$(cat \"${_SEARCH_RESULT}\")\n  _RN_ROOT_EXISTS=$(ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$_JSON_OUTPUT_RAW'); puts output[$_JSON_ROOT]\" || echo '')\n\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    _JSON_OUTPUT_BASE64=$(python -c 'import json,sys,base64;print(base64.b64encode(json.dumps(json.loads(open('\"'${_SEARCH_RESULT}'\"').read())['${_JSON_ROOT}'])))' || echo \"e30=\")\n  fi\n\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n\n  # config.messaging_auto_init_enabled\n  _MESSAGING_AUTO_INIT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"messaging_auto_init_enabled\")\n  if [[ $_MESSAGING_AUTO_INIT ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseMessagingAutoInitEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_MESSAGING_AUTO_INIT\")\")\n  fi\n\n  # config.crashlytics_disable_auto_disabler - undocumented for now - mainly for debugging, document if becomes usful\n  _CRASHLYTICS_AUTO_DISABLE_ENABLED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"crashlytics_disable_auto_disabler\")\n  if [[ $_CRASHLYTICS_AUTO_DISABLE_ENABLED == \"true\" ]]; then\n    echo \"Disabled Crashlytics auto disabler.\" # do nothing\n  else\n    _PLIST_ENTRY_KEYS+=(\"firebase_crashlytics_collection_enabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"NO\")\n  fi\n\n  # config.admob_delay_app_measurement_init\n  _ADMOB_DELAY_APP_MEASUREMENT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_delay_app_measurement_init\")\n  if [[ $_ADMOB_DELAY_APP_MEASUREMENT == \"true\" ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADDelayAppMeasurementInit\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"YES\")\n  fi\n\n  # config.admob_ios_app_id\n  _ADMOB_IOS_APP_ID=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_ios_app_id\")\n  if [[ $_ADMOB_IOS_APP_ID ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADApplicationIdentifier\")\n    _PLIST_ENTRY_TYPES+=(\"string\")\n    _PLIST_ENTRY_VALUES+=(\"$_ADMOB_IOS_APP_ID\")\n  fi\nelse\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n  echo \"warning:   A firebase.json file was not found, whilst this file is optional it is recommended to include it to configure firebase services in React Native Firebase.\"\nfi;\n\necho \"info: 2) Injecting Info.plist entries: \"\n\n# Log out the keys we're adding\nfor i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n  echo \"    ->  $i) ${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\"\ndone\n\nfor plist in ${_TARGET_PLIST} ${_DSYM_PLIST} ; do\n  if [[ -f ${plist} ]]; then\n    for i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n      setPlistValue \"${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\" \"${plist}\"\n    done\n  else\n    echo \"warning:   A Info.plist build output file was not found (${plist})\"\n  fi\ndone\n\necho \"info: <- RNFB build script finished\"\n\n\n\n","shellPath":"/bin/sh","type":"com.apple.buildphase.shell-script"},{"buildFiles":[],"emitEnvironment":"false","guid":"f4d28763d755257cd889a7bbde742dfc6829e84f02e88b4cc77a0fea089f4816","inputFileListPaths":[],"inputFilePaths":["${PODS_ROOT}/Target Support Files/Pods-demofirebasemodulesapp/Pods-demofirebasemodulesapp-resources.sh","${PODS_ROOT}/FBSDKCoreKit/FacebookSDKStrings.bundle"],"name":"[CP] Copy Pods Resources","originalObjectID":"8A44006225F3B20EDF615DB8","outputFileListPaths":[],"outputFilePaths":["${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FacebookSDKStrings.bundle"],"scriptContents":"\"${PODS_ROOT}/Target Support Files/Pods-demofirebasemodulesapp/Pods-demofirebasemodulesapp-resources.sh\"\n","shellPath":"/bin/sh","type":"com.apple.buildphase.shell-script"}],"buildRules":[],"dependencies":[],"guid":"f4d28763d755257cd889a7bbde742dfc7ceb6b36bcfc2fb90f69ac96de4975d6","name":"demofirebasemodulesapp","predominantSourceCodeLanguage":"Xcode.SourceCodeLanguage.Objective-C","productReference":{"guid":"f4d28763d755257cd889a7bbde742dfc4f47f80af1468e62de75f083b8820a77","name":"demofirebasemodulesapp.app","type":"product"},"productTypeIdentifier":"com.apple.product-type.application","provisioningSourceData":[{"bundleIdentifierFromInfoPlist":"$(PRODUCT_BUNDLE_IDENTIFIER)","configurationName":"Debug","legacyTeamID":"","provisioningStyle":0},{"bundleIdentifierFromInfoPlist":"$(PRODUCT_BUNDLE_IDENTIFIER)","configurationName":"Release","legacyTeamID":"","provisioningStyle":0}],"type":"standard"}